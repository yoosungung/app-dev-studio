package kr.ac.jj.survey.application.groupmanage.controller;

import java.io.IOException;

import org.apache.commons.lang3.StringUtils;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import kr.ac.jj.shared.domain.main.mapper.com.person.TbComPersonMapper;
import kr.ac.jj.shared.domain.main.model.com.person.TbComPerson;
import kr.ac.jj.survey.application.groupmanage.service.GroupManageServiceImpl;

/**
 * 그룹 관리 RestController
 */
@RestController
@RequestMapping(path = "/groupmanage/GroupManageFile")
public class GroupManageFileRestController {

    private @Autowired GroupManageServiceImpl groupManageServiceImpl;
    private @Autowired TbComPersonMapper tbComPersonMapper;

    /**
     * 엑셀 업로드
     */
    @PostMapping(path = "/uploadExcel", params = { "surveyGroupId" })
    public void uploadExcel(@RequestParam("upload") MultipartFile multipartFile, @RequestParam String surveyGroupId) {
        XSSFWorkbook workbook;

        try {
            workbook = new XSSFWorkbook(multipartFile.getInputStream());
        } catch (IOException e) {
            throw new RuntimeException(e);
        }

        XSSFSheet worksheet = workbook.getSheetAt(0);

        String koreanNm;
        String emailAdres;
        String tlphonNo;
        String personId;

        for(int i=1;i<worksheet.getPhysicalNumberOfRows() ;i++) {
            XSSFRow row = worksheet.getRow(i);

            koreanNm = row.getCell(0).getStringCellValue();
            emailAdres = row.getCell(1).getStringCellValue();;
            tlphonNo = row.getCell(2).getStringCellValue();

            personId = tbComPersonMapper.selectPersonIdByNameEmailTel(koreanNm, emailAdres, tlphonNo);

            if(StringUtils.isEmpty(personId)) {
                TbComPerson tbComPerson = new TbComPerson().newId();
                personId = tbComPerson.getPersonId();

                tbComPerson.setPersonSe("O");
                tbComPerson.setEmailAdres(emailAdres);
                tbComPerson.setKoreanNm(koreanNm);
                tbComPerson.setTlphonNo(tlphonNo);

                tbComPersonMapper.insert(tbComPerson);
            }

            // 사람(대상자) 추가
            groupManageServiceImpl.createPerson(surveyGroupId, personId);
        }
    }

}
