<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jd.survey.pub.mapper.SurveyDefinitionMapper">

    <sql id="baseSurveyDefinitionList">
        SELECT A.id AS surveyDefinitionId, A.name, A.description, A.is_public, DATE_FORMAT(A.start_dt, '%Y.%m.%d %T') AS startDt, A.start_dt AS startDay, DATE_FORMAT(A.end_dt, '%Y.%m.%d %T') AS endDt,        A.end_dt AS endDay
        ,        COALESCE(COUNT(IF(B.status = 'S', 1, null) ),0) AS userCnt
        FROM survey_definition A LEFT JOIN survey B ON A.id = B.survey_definition_id
        WHERE A.status = 'P'
        <!-- AND A.department_id = 1 -->
        GROUP BY A.id, A.name, A.description, A.is_public, A.start_dt, A.end_dt
    </sql>

    <select id="getSurveyDefinition" resultType="com.jd.survey.pub.domain.SurveyDefinition">
        /* 설문조사 조회 */
        SELECT A.id AS surveyDefinitionId, A.name, A.description, DATE_FORMAT(A.start_dt, '%Y.%m.%d %T') AS startDt, A.start_dt AS startDay, DATE_FORMAT(A.end_dt, '%Y.%m.%d %T') AS endDt,        A.end_dt AS endDay
        ,        COALESCE(COUNT(IF(B.status = 'S', 1, null) ),0) AS userCnt
        FROM survey_definition A LEFT JOIN survey B ON A.id = B.survey_definition_id
        WHERE A.status = 'P'
        <!-- AND A.department_id = 1 -->
        AND A.id = #{surveyDefinitionId}
        GROUP BY A.id, A.name, A.description, A.start_dt, A.end_dt
    </select>

    <select id="getSurveyDefinitionCount" parameterType="com.jd.survey.pub.web.cmd.SurveyDefinitionCmd" resultType="int">
        /* 설문조사 건수 조회 */
        SELECT COUNT(*)
        FROM (<include refid="baseSurveyDefinitionList"/>) A
    </select>

    <select id="getSurveyDefinitionList" parameterType="com.jd.survey.pub.web.cmd.SurveyDefinitionCmd" resultType="com.jd.survey.pub.domain.SurveyDefinition">
        /* 설문조사 검색 */
        <include refid="baseMapper.pagingPrefix"/>
        SELECT surveyDefinitionId, name, description, is_public, startDt, startDay, endDt, endDay, userCnt
        FROM (<include refid="baseSurveyDefinitionList"/>) A
        <include refid="baseMapper.sort"/>
        <include refid="baseMapper.pagingSurfix"/>
    </select>

    <select id="getMainStatics" resultType="com.jd.survey.pub.domain.SurveyDefinition">
        /* 메인 설문조사 통계 */
       SELECT COALESCE(COUNT(surveyDefinitionId),0) surveyCnt, SUM(userCnt) userCnt FROM (<include refid="baseSurveyDefinitionList"/>) A
    </select>

    <select id="getRealSurveyDefinitionList" resultType="com.jd.survey.pub.domain.SurveyDefinition">
        /*메인 실태조사 목록 조회*/
        SELECT *
        FROM (
            SELECT  A.department_id,    A.id AS surveyDefinitionId,        A.name,        A.purpose,        A.target,        A.description
            ,    DATE_FORMAT(A.start_dt, '%Y.%m.%d %T') AS startDt,    DATE_FORMAT(A.end_dt, '%Y.%m.%d %T') AS endDt
            ,    A.start_dt AS startDay,        A.end_dt AS endDay
            ,     (DATE_FORMAT(end_dt, '%Y%m%d')- DATE_FORMAT(start_dt, '%Y%m%d'))+1 AS term
            ,    COALESCE(COUNT(IF(B.status = 'S', 1, null)),0) AS userCnt
            ,    (SELECT COALESCE(COUNT(user_id ),0) FROM survey_sec_user_definition WHERE survey_definition_id = A.id) AS totalCnt
              ,   ROW_NUMBER() OVER(PARTITION BY A.department_id ORDER BY A.regist_dt desc) rn
            FROM survey_definition A LEFT JOIN survey B ON A.id = B.survey_definition_id
            WHERE A.status = 'P'
            <!-- AND A.department_id != 1 -->
            GROUP BY A.department_id, A.id, A.name, A.purpose, A.target, A.description, A.start_dt, A.end_dt, A.regist_dt
            ORDER BY A.department_id
        ) A
        WHERE rn = 1
    </select>

    <select id="getRealSurveyDefinitionListByLogin" resultType="com.jd.survey.pub.domain.SurveyDefinition">
        /*개인별 조사완료 실태조사 목록*/
        SELECT a.id surveyId,     b.id surveyDefinitionId
        FROM survey A,
        survey_definition B
        WHERE A.survey_definition_id = B.id
        AND B.department_id != 1
        AND B.status = 'P'
        AND A.status = 'S'
        AND A.login = #{login}
    </select>

</mapper>