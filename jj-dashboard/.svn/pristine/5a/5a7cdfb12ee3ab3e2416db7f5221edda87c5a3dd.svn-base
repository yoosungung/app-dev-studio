<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 입학 데이터 Mapper -->
<mapper namespace="kr.ac.jj.dashboard.application.entrance.mapper.EntranceMapper">

    <!-- 입학 데이터 리스트 조회 -->
    <select id="readList" resultType="kr.ac.jj.shared.infrastructure.framework.core.support.collection.CamelKeyMap">
        WITH ENTRANCE_DATA AS (
            SELECT IPSY_JUNG_GBN, IPSY_GUBUN, SCHO_FNAME, IPSY_HIGH_LOCATION_DO, IPSY_GUBUN_NAME_SUMMARY, IPSY_HIGH_LOCATION_DO_SUMMARY
                    , SUM(CNT) CNT, CONCAT(IPSY_JUNG_GBN," ",IPSY_GUBUN_NAME_SUMMARY) JUNGGBN_CONCAT
            FROM (
                    SELECT IPSY_JUNG_GBN    /* 정원내외 */
                        , IPSY_GUBUN        /* 정시/수시 */
                        , SCHO_FNAME, IPSY_HIGH_LOCATION_DO /* 고등학교 이름, 고등학교 위치도 FOR HIGH SCHOOL JOIN */
                        , CASE
                                WHEN IPSY_GUBUN_NAME LIKE '%(학생부교과)' THEN '학생부교과'
                                WHEN IPSY_GUBUN_NAME LIKE '%(학생부종합)' THEN '학생부종합'
                                WHEN IPSY_GUBUN_NAME LIKE '수시%'         THEN '수시'
                                WHEN IPSY_GUBUN_NAME LIKE '추가%'         THEN'추가'
                                WHEN IPSY_GUBUN_NAME LIKE '정시%'         THEN '정시'
                                ELSE IPSY_GUBUN_NAME
                            END IPSY_GUBUN_NAME_SUMMARY /* 입학 구분별 이름 */
                        , CASE
                                WHEN IPSY_HIGH_LOCATION_DO IN ('서울','경기') THEN '서울/경기'
                                WHEN IPSY_HIGH_LOCATION_DO IN ('광주','전남') THEN '광주/전남'
                                WHEN IPSY_HIGH_LOCATION_DO IN ('대전','충남') THEN '대전/충남'
                                WHEN IPSY_HIGH_LOCATION_DO = '전북' THEN CASE WHEN IPSY_HIGH_LOCATION_SIGUNGU = '전주시' THEN '전주시' ELSE '전라북도' END
                                WHEN IPSY_HIGH_LOCATION_DO IS NULL THEN '미상지역'
                                ELSE '기타지역'
                            END  IPSY_HIGH_LOCATION_DO_SUMMARY /* 지역 도별 이름 */
                        , 1 AS CNT
                    FROM V_IPSY_HIGHSCOOL_MAT
                    WHERE 1=1 /* UI CONDITION */
                    <if test="search.schoNm != null and search.schoNm != ''">
                        AND SCHO_FNAME = #{search.schoNm}
                    </if>
                    <if test="search.daehakNm != null and search.daehakNm != ''">
                        AND IPSY_DAEHAK = #{search.daehakNm}
                    </if>
                    <if test="search.hakkwaNm != null and search.hakkwaNm != ''">
                        AND IPSY_HAKKWA1_NAME = #{search.hakkwaNm}
                    </if>
                    <if test="search.junhyungNm != null and search.junhyungNm != ''">
                        AND IPSY_JUNHYUNG = #{search.junhyungNm}
                    </if>
            ) T
            GROUP BY IPSY_JUNG_GBN, IPSY_GUBUN, SCHO_FNAME, IPSY_HIGH_LOCATION_DO, IPSY_GUBUN_NAME_SUMMARY, IPSY_HIGH_LOCATION_DO_SUMMARY
        )
        #nodes data
        SELECT 'name' AS 'source', junggbn_concat AS 'target', -1 AS value
        FROM ENTRANCE_DATA a
        GROUP BY JUNGGBN_CONCAT
        UNION ALL
        SELECT 'name' AS 'source', IFNULL(B.IH_LCLASS,'미상') AS 'target', -1 AS value
        FROM (SELECT SCHO_FNAME, IPSY_HIGH_LOCATION_DO FROM ENTRANCE_DATA GROUP BY SCHO_FNAME, IPSY_HIGH_LOCATION_DO) A
        LEFT JOIN (SELECT IH_LCLASS, IH_SCLASS, IH_NAME, IH_SIDO FROM DW_HIGHSCHOOL) B ON B.IH_NAME = A.SCHO_FNAME AND B.IH_SIDO = A.IPSY_HIGH_LOCATION_DO
        GROUP BY IH_LCLASS
        UNION ALL
        SELECT 'name' AS 'source', IPSY_HIGH_LOCATION_DO_SUMMARY AS 'target', -1 AS value
        FROM ENTRANCE_DATA A
        GROUP BY IPSY_HIGH_LOCATION_DO_SUMMARY
        UNION ALL
        #links data
        SELECT JUNGGBN_CONCAT, IFNULL(IH_LCLASS,'미상') AS IH_LCLASS, SUM(CNT) AS VALUE
        FROM ENTRANCE_DATA A
        LEFT JOIN (SELECT IH_LCLASS, IH_SCLASS, IH_NAME, IH_SIDO FROM DW_HIGHSCHOOL) B ON B.IH_NAME = A.SCHO_FNAME AND B.IH_SIDO = A.IPSY_HIGH_LOCATION_DO
        GROUP BY JUNGGBN_CONCAT, IH_LCLASS
        UNION ALL
        SELECT IFNULL(IH_LCLASS,'미상') AS IH_LCLASS, IPSY_HIGH_LOCATION_DO_SUMMARY, SUM(CNT) AS VALUE
        FROM ENTRANCE_DATA A
        LEFT JOIN (SELECT IH_LCLASS, IH_SCLASS, IH_NAME, IH_SIDO FROM DW_HIGHSCHOOL) B ON B.IH_NAME = A.SCHO_FNAME AND B.IH_SIDO = A.IPSY_HIGH_LOCATION_DO
        GROUP BY IH_LCLASS, IPSY_HIGH_LOCATION_DO_SUMMARY
    </select>
</mapper>