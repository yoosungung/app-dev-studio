package kr.ac.jj.shared.application.common.sms.scheduler;

import org.apache.ibatis.session.ResultContext;
import org.quartz.DisallowConcurrentExecution;
import org.quartz.JobExecutionContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import kr.ac.jj.shared.application.common.sms.service.SmsServiceImpl;
import kr.ac.jj.shared.application.common.sms.service.SmsServiceNoTxImpl;
import kr.ac.jj.shared.domain.main.model.com.sms.TbComSms;
import kr.ac.jj.shared.infrastructure.framework.core.support.scheduling.BaseJob;
import kr.ac.jj.shared.infrastructure.framework.core.support.scheduling.model.JobDetailTrigger;
import kr.ac.jj.shared.infrastructure.framework.core.support.scheduling.model.SchedulerJobConfig;
import kr.ac.jj.shared.infrastructure.framework.mybatis.persistence.dao.handler.DataResultHandler;

/**
 * 문자메시지 발송 및 결과 업데이트 SchedulerJob
 */
@Component
@DisallowConcurrentExecution
public class SmsSendAndResultUpdateSchedulerJob extends BaseJob {

    private @Autowired SmsServiceNoTxImpl smsServiceNoTx;
    private @Autowired SmsServiceImpl smsService;

    @Override
    public void executeJob(SchedulerJobConfig jobConfig, JobDetailTrigger jobDetailTrigger,
            JobExecutionContext context) {

        // this.updateResult();
        this.sendSms();
    }

    /*
    private void updateResult() {
        smsServiceNoTx.readForResultUpdateList(new DataResultHandler<TbComSms>() {

            @Override
            public void handleResult(ResultContext<? extends TbComSms> resultContext) {
                smsService.updateResult(resultContext.getResultObject());
            }

        });
    }
    */

    private void sendSms() {
        smsServiceNoTx.readForSendList(new DataResultHandler<TbComSms>() {

            @Override
            public void handleResult(ResultContext<? extends TbComSms> resultContext) {
                smsService.send(resultContext.getResultObject());
            }

        });
    }

}
