package kr.ac.jj.shared.application.common.user.filter;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;

import kr.ac.jj.shared.infrastructure.framework.web.context.request.RequestContextUtil;
import kr.ac.jj.shared.infrastructure.framework.web.servlet.http.HttpServletRequestUtil;

public class UserLoginKeyFilter implements Filter {

    @Override
    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
            throws IOException, ServletException {

        HttpServletRequest httpRequest = HttpServletRequestUtil.getHttpServletRequest(request);
        String contextPath = httpRequest.getContextPath();
        String servletPath = httpRequest.getServletPath();

        String queryString = RequestContextUtil.getQueryStringRemovedParameters("username", "surveyPersonId");
        String username = httpRequest.getParameter("username");
        String surveyPersonId = httpRequest.getParameter("surveyPersonId");

        if (!StringUtils.isAllEmpty(username, surveyPersonId)) {
            HttpSession session = httpRequest.getSession(true);

            if (StringUtils.isNotEmpty(username)) {
                session.setAttribute("userLogin_loginTy", "PARAM");
                session.setAttribute("userLogin_username", username);
            } else if (StringUtils.isNotEmpty(surveyPersonId)) {
                session.setAttribute("userLogin_loginTy", "SURVEY");
                session.setAttribute("userLogin_username", surveyPersonId);
            }

            HttpServletResponse httpResponse = (HttpServletResponse) response;

            if (StringUtils.isNotEmpty(queryString)) {
                httpResponse.sendRedirect(contextPath + servletPath + "?" + queryString);
            } else {
                httpResponse.sendRedirect(contextPath + servletPath);
            }
        } else {
            HttpSession session = httpRequest.getSession();

            if (session != null) {
                httpRequest.setAttribute("userLogin_loginTy", session.getAttribute("userLogin_loginTy"));
                httpRequest.setAttribute("userLogin_username", session.getAttribute("userLogin_username"));

                session.removeAttribute("userLogin_loginTy");
                session.removeAttribute("userLogin_username");
            }

            chain.doFilter(httpRequest, response);
        }
    }

}
