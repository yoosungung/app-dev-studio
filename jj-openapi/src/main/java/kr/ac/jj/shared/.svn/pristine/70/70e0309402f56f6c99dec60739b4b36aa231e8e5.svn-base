package kr.ac.jj.shared.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AccountExpiredException;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.authentication.CredentialsExpiredException;
import org.springframework.security.authentication.DisabledException;
import org.springframework.security.authentication.InternalAuthenticationServiceException;
import org.springframework.security.authentication.LockedException;
import org.springframework.security.core.userdetails.UsernameNotFoundException;

import kr.ac.jj.shared.infrastructure.framework.web.servlet.error.ServletErrorConfig;

@Configuration
public class SharedExceptionConfig {

    @Bean
    public ServletErrorConfig servletErrorConfig() {
        ServletErrorConfig servletErrorConfig = new ServletErrorConfig();

        servletErrorConfig.setServletErrorInfo(UsernameNotFoundException.class,
                servletErrorConfig.getVisableBizErrorInfo());

        servletErrorConfig.setServletErrorInfo(BadCredentialsException.class,
                servletErrorConfig.getVisableBizErrorInfo());

        servletErrorConfig.setServletErrorInfo(DisabledException.class, servletErrorConfig.getVisableBizErrorInfo());

        servletErrorConfig.setServletErrorInfo(AccountExpiredException.class,
                servletErrorConfig.getVisableBizErrorInfo());

        servletErrorConfig.setServletErrorInfo(CredentialsExpiredException.class,
                servletErrorConfig.getVisableBizErrorInfo());

        servletErrorConfig.setServletErrorInfo(LockedException.class, servletErrorConfig.getVisableBizErrorInfo());

        servletErrorConfig.setServletErrorInfo(InternalAuthenticationServiceException.class,
                servletErrorConfig.getVisableBizErrorInfo());

        return servletErrorConfig;
    }

}
