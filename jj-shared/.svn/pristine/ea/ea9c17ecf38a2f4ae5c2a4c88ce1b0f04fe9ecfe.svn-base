<%@ page contentType="text/html; charset=utf-8" pageEncoding="UTF-8" %>
<%@ include file="/WEB-INF/tiles/shared/include/PageHeader.jspf" %>

<div id="list">
    <div class="pageHeader">
        코드 관리
        <div class="fr">
            <ui-button type="page" onclick="view.list.viewDetail();">코드 등록</ui-button>
        </div>
    </div>

    <div class="pageContents">
        <table class="form" v-on:keyup.enter="readList(true);">
            <colgroup>
                <col width="120px">
                <col width="">
                <col width="120px">
                <col width="">
            </colgroup>
            <tbody>
                <tr>
                    <th>검색어</th>
                    <td>
                        <ui-input type="text" v-model="gridRequest.search.searchText"></ui-input>
                    </td>
                    <th>사용여부</th>
                    <td>
                        <ui-select code-data="/common/useYn" first-name="(전체)" v-model="gridRequest.search.useYn"></ui-select>
                        <div class="fr">
                            <ui-button type="search" v-on:click="readList(true);">조회</ui-button>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>

        <div class="dataTbl">
            <ui-grid-paging v-bind:request="gridRequest" v-bind:result="gridResult" v-bind:read-list="readList">
                <table class="list">
                    <thead>
                        <tr>
                            <th width="" data-sort-name="codeGroup">코드그룹</th>
                            <th width="" data-sort-name="codeGroupNm">코드그룹 이름</th>
                            <th width="" data-sort-name="codeValueCo">코드 갯수</th>
                            <th width="" data-sort-name="codeGroupDc">코드그룹 설명</th>
                            <th width="" data-sort-name="useYn">사용여부</th>
                        </tr>
                    </thead>
                    <tbody v-cloak>
                        <tr v-for="row in gridResult.list" v-bind:key="row.personId">
                            <td class="tal">
                                <a href="javascript:void(0);" v-on:click="viewDetail(row.codeGroupId);">{{ row.codeGroup }}</a>
                            </td>
                            <td class="tal">{{ row.codeGroupNm }}</td>
                            <td class="tac">{{ row.codeValueCo }}</td>
                            <td class="tal">{{ row.codeGroupDc }}</td>
                            <td class="tac">{{ row.useYn }}</td>
                        </tr>
                    </tbody>
                </table>
            </ui-grid-paging>
        </div>
    </div>
</div>

<div id="edit" style="display: none;">
    <div class="pageHeader" v-if="codeGroupId == null">
        코드 등록
    </div>
    <div class="pageHeader" v-if="codeGroupId != null">
        코드 수정
    </div>

    <div class="pageContents">
        <h3>코드그룹 정보</h3>
        <table class="form">
            <colgroup>
                <col width="120px">
                <col width="">
                <col width="120px">
                <col width="">
            </colgroup>
            <tbody>
                <tr>
                    <th>코드그룹</th>
                    <td>
                        <ui-input type="text" v-model="model.tbSysCodeGroup.codeGroup" v-bind:max-byte="200" v-bind:byte-indicator="false" auto-focus></ui-input>
                        <ui-valid-checker v-bind:value="model.tbSysCodeGroup.codeGroup" check="required"></ui-valid-checker>
                    </td>
                    <th>코드그룹 이름</th>
                    <td>
                        <ui-input type="text" v-model="model.tbSysCodeGroup.codeGroupNm" v-bind:max-byte="500" v-bind:byte-indicator="false"></ui-input>
                        <ui-valid-checker v-bind:value="model.tbSysCodeGroup.codeGroupNm" check="required"></ui-valid-checker>
                    </td>
                </tr>
                <tr>
                    <th>코드그룹 설명</th>
                    <td colspan="3">
                        <ui-textarea v-model="model.tbSysCodeGroup.codeGroupDc" v-bind:max-byte="2000" v-bind:byte-indicator="true"></ui-textarea>
                    </td>
                </tr>
            </tbody>
        </table>

        <div class="table full">
            <h3>코드값 목록</h3>
            <div class="tar">
                <ui-list-button-append v-bind:data="model.tbSysCodeValueList"
                    v-bind:new-row-data="{ useYn: true }"
                    id-column-name="codeValueId"
                    sort-column-name="sortOrdr"
                ></ui-list-button-append>
                <ui-list-button-delete v-bind:data="model.tbSysCodeValueList"
                    sort-column-name="sortOrdr"
                ></ui-list-button-delete>
            </div>
        </div>
        <table class="list">
            <thead>
                <tr>
                    <th width="40px">
                        <ui-checkbox-head v-bind:data="model.tbSysCodeValueList"></ui-checkbox-head>
                    </th>
                    <th width="" data-sort-name="codeValue">코드값</th>
                    <th width="" data-sort-name="codeValueNm">코드값 이름</th>
                    <th width="" data-sort-name="sortOrdr">정렬번호</th>
                    <th width="" data-sort-name="useYn">사용여부</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="tbSysCodeValue in tbSysCodeValueListFiltered" v-bind:key="tbSysCodeValue.codeValueId">
                    <td class="tac">
                        <ui-checkbox-row v-bind:data="tbSysCodeValue"></ui-checkbox-row>
                    </td>
                    <td class="tal">
                        <ui-input type="text" v-model="tbSysCodeValue.codeValue" v-bind:max-byte="100" v-bind:byte-indicator="false"></ui-input>
                        <ui-valid-checker v-bind:value="tbSysCodeValue.codeValue" check="required"></ui-valid-checker>
                        <ui-valid-checker-duplicate v-bind:data="model.tbSysCodeValueList" v-bind:row-data="tbSysCodeValue" column-name="codeValue"></ui-valid-checker-duplicate>
                    </td>
                    <td class="tal">
                        <ui-input type="text" v-model="tbSysCodeValue.codeValueNm" v-bind:max-byte="1000" v-bind:byte-indicator="false"></ui-input>
                        <ui-valid-checker v-bind:value="tbSysCodeValue.codeValueNm" check="required"></ui-valid-checker>
                        <ui-valid-checker-duplicate v-bind:data="model.tbSysCodeValueList" v-bind:row-data="tbSysCodeValue" column-name="codeValueNm"></ui-valid-checker-duplicate>
                    </td>
                    <td class="tal">
                        <ui-input type="number" v-model="tbSysCodeValue.sortOrdr" min="1" max="999" class="tac"></ui-input>
                        <ui-valid-checker v-bind:value="tbSysCodeValue.sortOrdr" check="required, number"></ui-valid-checker>
                    </td>
                    <td class="tac">
                        <ui-checkbox v-model="tbSysCodeValue.useYn">사용</ui-checkbox>
                    </td>
                </tr>
            </tbody>
        </table>
        <ui-valid-checker v-bind:value="model.tbSysCodeValueList" check="required"></ui-valid-checker>

        <div class="tar">
            <ui-button type="page" v-on:click="execUpdate();">저장</ui-button>
            <ui-button type="page" v-on:click="execDelete();" v-if="codeGroupId != null">삭제</ui-button>
            <ui-button type="list" v-on:click="viewList();">목록</ui-button>
        </div>
    </div>
</div>

<script>
var view = {};

view.list = new Vue({
    el: '#list',
    data: {
        gridRequest: GridUtil.getRequestWithPaging({}, { codeGroup: "ASC" }),
        gridResult: {}
    },
    computed: {
        formatter: function() {
            return CommonUtil.formatter;
        }
    },
    mounted: function() {
        this.readList();
    },
    methods: {
        // 목록 조회
        readList: function(firstPage) {
            var vue = this;

            GridUtil.setLoadStart(vue, firstPage);

            CommonUtil.axios()
            .post("readList", vue.gridRequest)
            .then(function(response) {
                GridUtil.loadData(vue, response.data.result);
            })
            ["catch"](function(error) {
                CommonUtil.showAxiosError(error);
                GridUtil.setError(vue, error);
            });
        },
        // 상세 화면
        viewDetail: function(codeGroupId) {
            CommonUtil.setViewMode(view, "edit");

            view.edit.read(codeGroupId);
        }
    }
});

view.edit = new Vue({
    el: '#edit',
    data: {
        codeGroupId: null,
        model: {
            tbSysCodeGroup: {},
            tbSysCodeValueList: []
        }
    },
    computed: {
        formatter: function() {
            return CommonUtil.formatter;
        },
        tbSysCodeValueListFiltered: function() {
            return CommonUtil.getFilteredList(this.model.tbSysCodeValueList, "sortOrdr");
        }
    },
    methods: {
        // 목록 화면
        viewList: function() {
            CommonUtil.setViewMode(view, "list");
        },
        // 조회
        read: function(codeGroupId) {
            var vue = this;

            vue.codeGroupId = codeGroupId;

            CommonUtil.initModel(vue.model);
            CommonUtil.initValid();

            CommonUtil.axios()
            .get("", {
                params: {
                    codeGroupId: vue.codeGroupId
                }
            })
            .then(function(response) {
                if (vue.codeGroupId == null) {
                    response.data.tbSysCodeValueList.push(CommonUtil.setJobType({ useYn: true, sortOrdr: 1 }, "C"));
                }

                vue.model = response.data;

                $('[auto-focus]').focus();
            })
            ["catch"](function(error) {
                CommonUtil.showAxiosError(error);
            });
        },
        // 저장
        execUpdate: function() {
            if (!CommonUtil.checkValid()) {
                return;
            }

            var vue = this;

            if (!confirm("<spring:message code="common.message.save.confirm" text="저장하시겠습니까" />")) {
                return;
            }

            CommonUtil.axios()
            [vue.codeGroupId == null ? "post" : "put"]("", vue.model)
            .then(function(response) {
                alert("<spring:message code="common.message.save.success" text="저장되었습니다." />");
                view.list.readList();
                vue.viewList();
            })
            ["catch"](function(error) {
                CommonUtil.showAxiosError(error);
            });
        },
        // 삭제
        execDelete: function() {
            var vue = this;

            if (!confirm("<spring:message code="common.message.delete.confirm" text="정말로 삭제하시겠습니까" />")) {
                return;
            }

            CommonUtil.axios()
            ["delete"]("", {
                data: vue.codeGroupId
            })
            .then(function(response) {
                alert("<spring:message code="common.message.delete.success" text="삭제되었습니다." />");
                view.list.readList();
                vue.viewList();
            })
            ["catch"](function(error) {
                CommonUtil.showAxiosError(error);
            });
        }
    }
});
</script>
