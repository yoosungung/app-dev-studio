"use strict";
/**
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/** Enumeration describing the various kinds of member supported by this plugin. */
var Kind;
(function (Kind) {
    Kind["Class"] = "class";
    Kind["Constructor"] = "constructor";
    Kind["Enum"] = "enum";
    Kind["EnumMember"] = "enum member";
    Kind["Interface"] = "interface";
    Kind["Method"] = "method";
    Kind["Parameter"] = "parameter";
    Kind["Signature"] = "signature";
    Kind["Property"] = "property";
    Kind["TypeAlias"] = "type alias";
    Kind["Accessor"] = "accessor";
})(Kind = exports.Kind || (exports.Kind = {}));
function typeguard(kind) {
    return function (data) { return data != null && data.kind === kind; };
}
// wooooo typeguards
exports.isTsClass = typeguard(Kind.Class);
exports.isTsConstructor = typeguard(Kind.Constructor);
exports.isTsEnum = typeguard(Kind.Enum);
exports.isTsEnumMember = typeguard(Kind.EnumMember);
exports.isTsInterface = typeguard(Kind.Interface);
exports.isTsMethod = typeguard(Kind.Method);
exports.isTsParameter = typeguard(Kind.Parameter);
exports.isTsProperty = typeguard(Kind.Property);
exports.isTsSignature = typeguard(Kind.Signature);
exports.isTsTypeAlias = typeguard(Kind.TypeAlias);
